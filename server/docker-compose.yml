services:
  kafka:
    container_name: kafka
    hostname: kafka
    image: bitnami/kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,EXTERNAL://kafka:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - kafka-net

  jupyter:
    image: jupyter/scipy-notebook:latest
    depends_on:
      - kafka
    volumes:
      - ./logging:/home/jovyan/work
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
    networks:
      - kafka-net

  orchistrator:
    build: ./orchistrator
    depends_on:
      - kafka
    volumes:
      - ./orchistrator:/orchistrator
    ports:
      - "8080:8080"
    devices:
      - "/dev/bus/usb/003/002:/dev/ttyUSB0"  # USB device for mesh communication (mapped to ttyUSB0 inside container)
    privileged: true  # Required for serial port access
    environment:
      - SERIAL_PORT=${SERIAL_PORT:-/dev/ttyUSB0}  # Override with env var if needed
      - BAUD_RATE=${BAUD_RATE:-115200}
      - API_PORT=${API_PORT:-8080}
      - KAFKA_BROKER=kafka:9094
    networks:
      - kafka-net
    restart: unless-stopped

networks:
  kafka-net:
    driver: bridge
